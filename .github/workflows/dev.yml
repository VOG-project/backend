name: VOG-API-SERVER-CICD

env:
  DOCKER_CONTAINER_NAME: vog-api-server
  DOCKER_IMAGE_NAME: ghcr.io/${{ secrets.VOG_NEST_GITHUB_ACTOR }}/vog-api-server-image

on:
  push:
    branches: ["dev"]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
    - name: get file list
      run: ls -al
    - name: Set up docker build
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to ghcr
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.VOG_GHCR_TOKEN }}
    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: build
    # ec2에 설치한 Runner로 job 실행
    runs-on: [self-hosted, label-vog ]
    # Github Container Registry 로그인
    # Docker Container 중지 및 삭제, Docker image 삭제
    # 새로 배포한 Docker Image로 Container 실행
    steps:
    - name: Login to ghcr
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.VOG_GHCR_TOKEN }}
    - name: Run docker
      run: |
          docker stop ${{ env.DOCKER_CONTAINER_NAME }} && docker rm ${{ env.DOCKER_CONTAINER_NAME }} && docker rmi ${{ env.DOCKER_IMAGE_NAME }}:latest
          docker run -d -p 3000:3000 --name ${{ env.DOCKER_CONTAINER_NAME }} --restart always ${{ env.DOCKER_IMAGE_NAME }}:latest
